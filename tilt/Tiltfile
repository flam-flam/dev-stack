# Load the environment variables from the .env file at the root of the repo
load("ext://dotenv", "dotenv")
load("ext://secret", "secret_from_dict")

print("""
-----------------------------------------------------------------
âœ¨ðŸ¦©âœ¨ Hello Flamily!
-----------------------------------------------------------------
""".strip())

local_resource("pre-check",
    cmd="sh pre-check.sh",
    deps=[
        "pre-check.sh",
        ".env"
    ],
    labels=["Prerequisites"]
)

print("> Loading secrets from .env")
dotenv(fn="../.env")

print("> Building local images")
# Build the images with a custom name
docker_build("dispatcher-service:dev", "../../dispatcher-service")
docker_build("submission-service:dev", "../../submission-service/src/flamflam.SubmissionService")
docker_build("comment-service:dev", "../../comment-service")

print("> Deploying extra manifests")
# Deploy secrets for the dispatcher
k8s_yaml(secret_from_dict("dispatcher-service-secrets", inputs={
    "REDDIT_CLIENT_ID": os.getenv("REDDIT_CLIENT_ID"),
    "REDDIT_CLIENT_SECRET": os.getenv("REDDIT_CLIENT_SECRET")
}))
# Deploy a PVC for mongodb data
k8s_yaml("extra-manifests/mongodb-data.yaml")

print("> Deploying helm charts")
# Deploy the Helm charts
charts = [
    "mongodb",
    "comment-service",
    "submission-service",
    "dispatcher-service",
    "mongo-express"
]
for chart in charts:
    k8s_yaml(helm(
        "../../helm-charts/charts/" + chart,
        name=chart,
        values="helm-values/" + chart + ".yaml"
    ))

k8s_resource(workload="mongo-express", port_forwards=8081)

# Assign correct workloads to accounts and configs in the helm chart
k8s_resource(
    new_name="extra-manifests",
    objects=[
        "dispatcher-service-secrets:secret",
        "mongodb-data:persistentvolumeclaim"
    ],
    labels=["Prerequisites"]
)

k8s_resource(
    workload="mongodb",
    objects=[
        "mongodb-init-config:configmap",
        "mongodb:serviceaccount",
        "mongodb-root:secret",
        "mongodb-svc:secret"
    ],
    resource_deps=["pre-check"],
    labels=["Services"]
)
k8s_resource(
    workload="dispatcher-service",
    objects=[
        "dispatcher-service:configmap",
        "dispatcher-service:serviceaccount"
    ],
    resource_deps=["pre-check", "comment-service", "submission-service"],
    labels=["Services"]
)
k8s_resource(
    workload="comment-service",
    objects=[
        "comment-service:serviceaccount"
    ],
    resource_deps=["pre-check", "mongodb"],
    labels=["Services"]
)
k8s_resource(
    workload="submission-service",
    objects=[
        "submission-service:serviceaccount"
    ],
    resource_deps=["pre-check", "mongodb"],
    labels=["Services"]
)
k8s_resource(
    workload="mongo-express",
    objects=[
        "mongo-express:serviceaccount"
    ],
    resource_deps=["mongodb"],
    labels=["Services"]
)
